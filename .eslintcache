[{"/Users/traceytran/Desktop/covid-tracker-app/src/index.js":"1","/Users/traceytran/Desktop/covid-tracker-app/src/App.js":"2","/Users/traceytran/Desktop/covid-tracker-app/src/components/Countrypicker/Countrypicker.jsx":"3","/Users/traceytran/Desktop/covid-tracker-app/src/components/Chart/Chart.jsx":"4","/Users/traceytran/Desktop/covid-tracker-app/src/components/index.js":"5","/Users/traceytran/Desktop/covid-tracker-app/src/components/Cards/Cards.jsx":"6","/Users/traceytran/Desktop/covid-tracker-app/src/api/index.js":"7"},{"size":277,"mtime":1608003170638,"results":"8","hashOfConfig":"9"},{"size":1430,"mtime":1609209347271,"results":"10","hashOfConfig":"9"},{"size":972,"mtime":1610049245185,"results":"11","hashOfConfig":"9"},{"size":2438,"mtime":1609210011189,"results":"12","hashOfConfig":"9"},{"size":236,"mtime":1607983778686,"results":"13","hashOfConfig":"9"},{"size":2621,"mtime":1608162640617,"results":"14","hashOfConfig":"9"},{"size":1282,"mtime":1609209003291,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1d7qvm2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/traceytran/Desktop/covid-tracker-app/src/index.js",[],["33","34"],"/Users/traceytran/Desktop/covid-tracker-app/src/App.js",[],["35","36"],"/Users/traceytran/Desktop/covid-tracker-app/src/components/Countrypicker/Countrypicker.jsx",[],"/Users/traceytran/Desktop/covid-tracker-app/src/components/Chart/Chart.jsx",[],"/Users/traceytran/Desktop/covid-tracker-app/src/components/index.js",[],"/Users/traceytran/Desktop/covid-tracker-app/src/components/Cards/Cards.jsx",[],"/Users/traceytran/Desktop/covid-tracker-app/src/api/index.js",["37"],"import axios from 'axios';\nimport { Countrypicker } from '../components';\n\n\nconst url = 'https://covid19.mathdro.id/api'\n\n\n// asynchronous function returning response from API\nexport const fetchData = async (country) => {\n    let changeableURL = url;\n\n    if (country){\n        changeableURL = `${url}/countries/${country}`;\n    }\n    \n    try{\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\n        \n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        };\n    \n\n    } catch(error){\n        console.log(error);\n\n    }\n\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return modifiedData;\n    } catch (error){\n        console.log(error);\n    }\n\n}\n\n\nexport const fetchCountries = async () => {\n    try{\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n\n    } catch (error){\n        console.log(error);\n    }\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":23},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unused-vars","'Countrypicker' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]